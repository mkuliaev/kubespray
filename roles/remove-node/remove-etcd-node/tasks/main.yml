---
- name: Lookup node IP in kubernetes
  command: >
    {{ kubectl }} get nodes {{ node }}
<<<<<<< HEAD
    -o jsonpath-as-json='{.status.addresses[?(@.type=="InternalIP")].address}'
  register: k8s_node_ips
  changed_when: false
  when:
  - groups['kube_control_plane'] | length > 0
  delegate_to: "{{ groups['kube_control_plane'] | first }}"

- name: Remove etcd member from cluster
=======
    -o jsonpath='{range .status.addresses[?(@.type=="InternalIP")]}{@.address}{"\n"}{end}'
  register: remove_node_ip
  when:
    - groups['kube_control_plane'] | length > 0
    - inventory_hostname in groups['etcd']
    - ip is not defined
    - access_ip is not defined
  delegate_to: "{{ groups['etcd'] | first }}"
  failed_when: false

- name: Set node IP
  set_fact:
    node_ip: "{{ ip | default(access_ip | default(remove_node_ip.stdout)) | trim }}"
  when:
    - inventory_hostname in groups['etcd']

- name: Make sure node_ip is set
  assert:
    that: node_ip is defined and node_ip | length > 0
    msg: "Etcd node ip is not set !"
  when:
    - inventory_hostname in groups['etcd']

- name: Lookup etcd member id
  shell: "set -o pipefail && {{ bin_dir }}/etcdctl member list | grep {{ node_ip }} | cut -d, -f1"
  args:
    executable: /bin/bash
  register: etcd_member_id
  ignore_errors: true  # noqa ignore-errors
  changed_when: false
  check_mode: no
  tags:
    - facts
>>>>>>> 2cb8c8544 (Fix logical error when checking for boostrap-os (#10867) (#10953))
  environment:
    ETCDCTL_API: "3"
    ETCDCTL_CERT: "{{ kube_cert_dir + '/etcd/server.crt' if etcd_deployment_type == 'kubeadm' else etcd_cert_dir + '/admin-' + groups['etcd'] | first + '.pem' }}"
    ETCDCTL_KEY: "{{ kube_cert_dir + '/etcd/server.key' if etcd_deployment_type == 'kubeadm' else etcd_cert_dir + '/admin-' + groups['etcd'] | first + '-key.pem' }}"
    ETCDCTL_CACERT: "{{ kube_cert_dir + '/etcd/ca.crt' if etcd_deployment_type == 'kubeadm' else etcd_cert_dir + '/ca.pem' }}"
    ETCDCTL_ENDPOINTS: "https://127.0.0.1:2379"
  delegate_to: "{{ groups['etcd'] | first }}"
<<<<<<< HEAD
  block:
  - name: Lookup members infos
    command: "{{ bin_dir }}/etcdctl member list"
    register: etcd_members
    changed_when: false
    check_mode: false
    tags:
    - facts
  - name: Remove member from cluster
    vars:
      node_ip: >-
        {%- if not ipv4_stack -%}
        {{ ip6 if ip6 is defined else (access_ip6 if access_ip6 is defined else (k8s_node_ips.stdout | from_json)[0]) | ansible.utils.ipwrap }}
        {%- else -%}
        {{ ip if ip is defined else (access_ip if access_ip is defined else (k8s_node_ips.stdout | from_json)[0]) | ansible.utils.ipwrap }}
        {%- endif -%}
    command:
      argv:
      - "{{ bin_dir }}/etcdctl"
      - member
      - remove
      - "{{ ((etcd_members.stdout_lines | select('contains', '//' + node_ip + ':'))[0] | split(','))[0] }}"
    register: etcd_removal_output
    changed_when: "'Removed member' in etcd_removal_output.stdout"
=======
  when: inventory_hostname in groups['etcd']

- name: Remove etcd member from cluster
  command: "{{ bin_dir }}/etcdctl member remove {{ etcd_member_id.stdout }}"
  environment:
    ETCDCTL_API: "3"
    ETCDCTL_CERT: "{{ kube_cert_dir + '/etcd/server.crt' if etcd_deployment_type == 'kubeadm' else etcd_cert_dir + '/admin-' + groups['etcd'] | first + '.pem' }}"
    ETCDCTL_KEY: "{{ kube_cert_dir + '/etcd/server.key' if etcd_deployment_type == 'kubeadm' else etcd_cert_dir + '/admin-' + groups['etcd'] | first + '-key.pem' }}"
    ETCDCTL_CACERT: "{{ kube_cert_dir + '/etcd/ca.crt' if etcd_deployment_type == 'kubeadm' else etcd_cert_dir + '/ca.pem' }}"
    ETCDCTL_ENDPOINTS: "https://127.0.0.1:2379"
  delegate_to: "{{ groups['etcd'] | first }}"
  when:
    - inventory_hostname in groups['etcd']
    - etcd_member_id.stdout | length > 0
>>>>>>> 2cb8c8544 (Fix logical error when checking for boostrap-os (#10867) (#10953))
