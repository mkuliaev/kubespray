---
<<<<<<< HEAD
# This is a list of nodes with groups for each scenario/cluster layouts
scenarios:
  separate:
    - node_groups: ['kube_control_plane']
    - node_groups: ['kube_node']
    - node_groups: ['etcd']
  ha:
    - node_groups: ['kube_control_plane', 'etcd']
    - node_groups: ['kube_control_plane', 'etcd']
    - node_groups: ['kube_node', 'etcd']
  default:
    - node_groups: ['kube_control_plane', 'etcd']
    - node_groups: ['kube_node']
  all-in-one:
    - node_groups: ['kube_control_plane', 'etcd', 'kube_node']
  ha-recover:
    - node_groups: ['kube_control_plane', 'etcd']
    - node_groups: ['kube_control_plane', 'etcd', 'broken_kube_control_plane', 'broken_etcd']
    - node_groups: ['kube_node', 'etcd']
  ha-recover-noquorum:
    - node_groups: ['kube_control_plane', 'etcd', 'broken_kube_control_plane', 'broken_etcd']
    - node_groups: ['kube_control_plane', 'etcd', 'broken_kube_control_plane', 'broken_etcd']
    - node_groups: ['kube_node', 'etcd']
  node-etcd-client:
    - node_groups: ['kube_node', 'kube_control_plane', 'etcd']
    - node_groups: ['kube_node', 'etcd']
    - node_groups: ['kube_node', 'etcd']
    - node_groups: ['kube_node']

# Get pod metadata / CI vars from environment

ci_job_id: "{{ lookup('ansible.builtin.env', 'CI_JOB_ID', default=undefined) }}"
pod_name: "{{ lookup('ansible.builtin.env', 'POD_NAME', default=undefined) }}"
pod_uid: "{{ lookup('ansible.builtin.env', 'POD_UID', default=undefined) }}"
pod_namespace: "{{ lookup('ansible.builtin.env', 'POD_NAMESPACE', default=undefined) }}"
=======
_vm_count_dict:
  separate: 3
  separate-scale: 3
  ha: 3
  ha-scale: 3
  ha-recover: 3
  ha-recover-noquorum: 3
  all-in-one: 1
  node-etcd-client: 4
  default: 2

vm_count: "{{ _vm_count_dict[mode | d('default')] }}"
>>>>>>> 2cb8c8544 (Fix logical error when checking for boostrap-os (#10867) (#10953))
